


- ENTRYPOINT:
-------------

Purpose: The ENTRYPOINT instruction specifies the executable that should be run when a container is
         started from the image. It's the command that gets executed when you run a container from 
         the image.
Usage: The ENTRYPOINT instruction can be overridden by providing command-line arguments when starting
       a container. If you specify both ENTRYPOINT and CMD in a Dockerfile, CMD provides default
       arguments to ENTRYPOINT.
Example:
            ENTRYPOINT ["/usr/bin/myapp"]
            CMD ["--help"]

# In this example, /usr/bin/myapp is the executable that will be run 
# when a container is started from the image. The --help argument is 
# the default argument provided to myapp.

if u want to do some setup before after the container been created using ENTRYPOINT script
we can define a shell script looking like this : 

#!/bin/bash
# Perform setup tasks here
# ......
# Start the main application
# exec "$@"

RUN ["default arg"] if user want to provide his own argument to the app

#When you use exec "$@" in an entrypoint script, it means that the script will execute 
#the command passed to it as arguments, with those arguments being passed directly to 
#the command. This is particularly useful in Docker containers because it allows the 
#container to be started with a default command or overridden with custom arguments.

- CMD :
-------

Purpose: The CMD instruction provides default arguments to the ENTRYPOINT instruction 
         or specifies a command to be executed if no ENTRYPOINT is defined. It's used
         to set default behavior for the container.
Usage: If CMD is used to provide default arguments to ENTRYPOINT, it can be overridden
       by providing command-line arguments when starting a container. If CMD is used
       without ENTRYPOINT, it specifies the default command to be executed when a container is run.
Example:
            CMD ["/bin/echo", "Hello, World!"]

#In this example, if no ENTRYPOINT is defined, the container will
#execute /bin/echo "Hello, World!" by default when it's run.

- Best Practices:
-----------------

Use : ENTRYPOINT for Executable Containers: If your container is meant to be an executable, 
      use ENTRYPOINT to specify the main command that should be run. This is particularly
      useful for containers that are designed to run a specific application or service.
Use : CMD for Default Arguments: Use CMD to provide default arguments to ENTRYPOINT or to 
      specify a default command if no ENTRYPOINT is defined. This allows users to easily
      override the default behavior by providing their own arguments when starting the container.
Combine : ENTRYPOINT with CMD: For containers that are meant to be executable, combine 
      ENTRYPOINT with CMD to provide default arguments to the executable. This is a common
      pattern for creating reusable containers.
